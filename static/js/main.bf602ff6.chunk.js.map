{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monster","id","name","email","CardList","monsters","map","SearchBox","placeholder","fnChange","type","onChange","App","handleChange","e","setState","searchField","target","value","state","fetch","then","response","json","users","this","filteredMonsters","filter","toLowerCase","includes","toLocaleLowerCase","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qTAIaA,EAAO,SAACC,GAAD,OAChB,sBAAKC,UAAY,iBAAjB,UACI,qBAAKC,IAAM,UACXC,IAAG,+BAA4BH,EAAMI,QAAQC,GAA1C,4BAEH,6BAAKL,EAAMI,QAAQE,OACnB,4BAAIN,EAAMI,QAAQG,YCNbC,EAAW,SAAAR,GAAK,OACzB,qBAAMC,UAAW,YAAjB,SAEID,EAAMS,SAASC,KAAI,SAAAN,GAAO,OACtB,cAAC,EAAD,CAAwBA,QAAWA,GAAvBA,EAAQC,UCJnBM,G,MAAY,SAAC,GAAD,IAAEC,EAAF,EAAEA,YAAYC,EAAd,EAAcA,SAAd,OACrB,uBACAZ,UAAY,SACZa,KAAM,SACNF,YAAeA,EACfG,SAAWF,MCmCAG,E,kDApCb,aAAc,IAAD,8BACX,gBAcFC,aAAe,SAAAC,GACb,EAAKC,SAAS,CAACC,YAAcF,EAAEG,OAAOC,SAbtC,EAAKC,MAAQ,CACXd,SAAW,GACXW,YAAc,IALL,E,qDASb,WAAoB,IAAD,OACjBI,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKT,SAAS,CAACV,SAAWmB,S,oBAQ3C,WAAU,IAAD,EACyBC,KAAKN,MAA7Bd,EADD,EACCA,SAASW,EADV,EACUA,YACXU,EAAmBrB,EAASsB,QAAO,SAAA3B,GAAO,OAC9CA,EAAQE,KAAK0B,cAAcC,SAASb,EAAYc,wBAGlD,OAAO,sBAAKjC,UAAU,MAAf,UACL,gDACA,cAAC,EAAD,CACCW,YAAc,kBACdC,SAAYgB,KAAKZ,eAElB,cAAC,EAAD,CAAUR,SAAYqB,W,GAlCVK,aCMHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBb,MAAK,YAAkD,IAA/Cc,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.bf602ff6.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport '../card/card.styles.css';\r\n\r\nexport const Card = (props)  => (\r\n    <div className = 'card-container'>\r\n        <img alt = 'monster' \r\n        src = {`https://robohash.org/${props.monster.id}?set=set2&size=180x180`}\r\n        />\r\n        <h2>{props.monster.name}</h2>\r\n        <p>{props.monster.email}</p>\r\n    </div>\r\n\r\n)","import React from 'react';\r\nimport './card-list.styles.css';\r\nimport {Card} from '../card/card.component';\r\n\r\nexport const CardList = props => (\r\n    <div  className =\"card-list\" >    \r\n    {\r\n        props.monsters.map(monster =>(\r\n            <Card key ={monster.id} monster = {monster}/>\r\n        ))\r\n    }\r\n        </div>\r\n)\r\n","import React from 'react';\r\n\r\nimport './search-box.styles.css';\r\n\r\nexport const SearchBox = ({placeholder,fnChange}) => (\r\n    <input\r\n    className = 'search'\r\n    type ='search'\r\n    placeholder = {placeholder}\r\n    onChange ={fnChange}/>\r\n)\r\n","import React,{Component} from 'react';\nimport './App.css';\nimport { CardList } from './components/card-list/card-list.component';\nimport {SearchBox} from './components/search-box/search-box.component';\n\n\nclass App extends Component {\n\n  constructor(){\n    super();\n\n    this.state = {\n      monsters : [],\n      searchField : ''\n    }\n  }\n\n  componentDidMount(){\n    fetch('https://jsonplaceholder.typicode.com/users')\n    .then(response => response.json())\n    .then(users => this.setState({monsters : users}));\n  }\n\n  handleChange = e => {\n    this.setState({searchField : e.target.value});\n  }\n  \n\n  render() {\n    const { monsters,searchField} = this.state;\n    const filteredMonsters = monsters.filter(monster => \n      monster.name.toLowerCase().includes(searchField.toLocaleLowerCase())\n      );\n\n    return <div className=\"App\">\n      <h1>Monsters Rodex</h1>\n      <SearchBox\n       placeholder = 'search monsters'\n       fnChange = {this.handleChange}\n       ></SearchBox>\n      <CardList monsters = {filteredMonsters}></CardList>\n      </div>\n    }\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}